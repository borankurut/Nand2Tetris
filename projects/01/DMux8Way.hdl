// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/01/DMux8Way.hdl

/**
 * 8-way demultiplexor:
 * {a, b, c, d, e, f, g, h} = {in, 0, 0, 0, 0, 0, 0, 0} if sel == 000
 *                            {0, in, 0, 0, 0, 0, 0, 0} if sel == 001
 *                            etc.
 *                            {0, 0, 0, 0, 0, 0, 0, in} if sel == 111
 */

CHIP DMux8Way {
    IN in, sel[3];
    OUT a, b, c, d, e, f, g, h;

    PARTS:
    // Put your code here:

    Not(in=sel[0], out=ns0);
    Not(in=sel[1], out=ns1);
    Not(in=sel[2], out=ns2);

    And(a=sel[0], b=sel[1], out=s0s1);
    And(a=sel[0], b=sel[2], out=s0s2);
    And(a=sel[1], b=sel[2], out=s1s2);

    And(a=ns0, b=ns1, out=ns0ns1);
    And(a=ns0, b=ns2, out=ns0ns2);
    And(a=ns1, b=ns2, out=ns1ns2);

    And(a=s1s2, b=sel[0], out=s0s1s2);
    And(a=s1s2, b=ns0, out=ns0s1s2);
    And(a=s0s2, b=ns1, out=s0ns1s2);
    And(a=s0s1, b=ns2, out=s0s1ns2);
    And(a=ns0ns1, b=sel[2], out=ns0ns1s2);
    And(a=ns0ns2, b=sel[1], out=ns0s1ns2);
    And(a=ns1ns2, b=sel[0], out=s0ns1ns2);
    And(a=ns0ns1, b=ns2, out=ns0ns1ns2);

    And(a=ns0ns1ns2, b=in, out=a);
    And(a=s0ns1ns2, b=in, out=b);
    And(a=ns0s1ns2, b=in, out=c);
    And(a=s0s1ns2, b=in, out=d);
    And(a=ns0ns1s2, b=in, out=e);
    And(a=s0ns1s2, b=in, out=f);
    And(a=ns0s1s2, b=in, out=g);
    And(a=s0s1s2, b=in, out=h);
}